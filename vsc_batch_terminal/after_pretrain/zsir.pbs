#!/bin/bash

#PBS -A lcalculus
#PBS -l partition=gpu
#PBS -l pmem=5gb
#PBS -m abe
#PBS -j oe
#PBS -M nathan.cornille@kuleuven.be

source $HOME/.bashrc
conda activate devlbert

MINI=false
CFG_NAME=bert_base_6layer_6conect

#while [[ "$#" -gt 0 ]]; do
#    case $1 in
#        -p|--pretrained_ckpt) pretrained_ckpt="$2"; shift ;;
#        -o|--output_dir) output_dir="$2"; shift ;;
#        --mini) MINI=true; shift ;;
#        *) echo "Unknown parameter passed: $1"; exit 1 ;;
#    esac
#    shift
#done

# Adapted from https://stackoverflow.com/a/14203146/6297057
#POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
echo "key"
echo $key

case $key in
    -p|--pretrained_ckpt)
    pretrained_ckpt="$2"
    shift # past argument
    shift # past value
    ;;
    -o|--output_dir)
    output_dir="$2"
    shift # past argument
    shift # past value
    ;;
    --vilbert)
    VILBERT=true
    shift # past argument
    ;;
    --mini)
    MINI=true
    shift # past argument
    ;;
#    *)    # unknown option
#    POSITIONAL+=("$1") # save it in an array for later
#    shift # past argument
#    ;;
    *) echo "Unknown parameter passed: $key"; exit 1 ;;
esac
done
#set -- "${POSITIONAL[@]}" # restore positional parameters

PRETRAINED_CKPT_RUN_NAME=`basename "$output_dir"`

echo "pretrained_ckpt_name: ${pretrained_ckpt}"
if [ "$MINI" = true ]
then
    echo 'mini was used'
    mini_arg='--mini'
else
    mini_arg=''
fi


if [ "$VILBERT" = true ]
then
    echo 'vilbert was used'
    vilbert_arg='--vilbert'
else
    vilbert_arg=''
fi

# Evaluating on IR
python eval_retrieval.py --bert_model bert-base-uncased --from_pretrained $pretrained_ckpt --config_file config/bert_base_6layer_6conect.json --tasks 3 --split test --batch_size 1 --zero_shot $mini_arg --output_dir $output_dir/ZSIR --save_name default $vilbert_arg

